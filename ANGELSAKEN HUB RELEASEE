-- âœ… FULL FORSAKEN GUI with Auto Block, ESP, Auto Solve, Sniffer, Infinite Stamina, and Auto Punch local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({ Name = "ANGELSAKEN GUI", LoadingTitle = "Loading ESP & Tools...", LoadingSubtitle = "by ChatGPT", ConfigurationSaving = { Enabled = true, FolderName = "ForsakenGUI", FileName = "Settings" }, KeySystem = false })

-- Tabs local MainTab = Window:CreateTab("Main", 4483362458) local ESPTab = Window:CreateTab("ESP", 4483362458) local DebugTab = Window:CreateTab("Sniffer", 4483362458)

-- Auto Block local AutoBlockEnabled = false local BlockRange = 10 MainTab:CreateToggle({ Name = "Auto Block (Range-Based)", CurrentValue = false, Callback = function(v) AutoBlockEnabled = v end }) MainTab:CreateSlider({ Name = "Block Range", Range = {0, 25}, Increment = 1, CurrentValue = BlockRange, Callback = function(v) BlockRange = v end })

-- Infinite Stamina local infiniteStamina = false MainTab:CreateToggle({ Name = "Infinite Stamina", CurrentValue = false, Callback = function(v) infiniteStamina = v end }) task.spawn(function() while task.wait(0.1) do if infiniteStamina then local p = game.Players.LocalPlayer if p and p.Character then local s = p:FindFirstChild("Stamina") or p.Character:FindFirstChild("Stamina") if s and s:IsA("NumberValue") then s.Value = s.MaxValue or 100 end end end end end)

-- Auto Solve Generator local autoSolve = false local solveTime = 5 MainTab:CreateToggle({ Name = "Auto Solve Generator Puzzle", CurrentValue = false, Callback = function(v) autoSolve = v end }) MainTab:CreateSlider({ Name = "Solve Delay", Range = {1, 10}, Increment = 0.5, CurrentValue = solveTime, Callback = function(v) solveTime = v end })

-- Hitbox local hitboxSize = 5 local hitboxEnabled = false MainTab:CreateToggle({ Name = "Hitbox Expander", CurrentValue = false, Callback = function(v) hitboxEnabled = v end }) MainTab:CreateSlider({ Name = "Hitbox Size", Range = {1, 50}, Increment = 1, CurrentValue = hitboxSize, Callback = function(v) hitboxSize = v end })

-- ESP Options local killerESP, survivorESP, genESP, itemESP = false, false, false, false ESPTab:CreateToggle({ Name = "Killer ESP", CurrentValue = false, Callback = function(v) killerESP = v end }) ESPTab:CreateToggle({ Name = "Survivor ESP", CurrentValue = false, Callback = function(v) survivorESP = v end }) ESPTab:CreateToggle({ Name = "Generator ESP", CurrentValue = false, Callback = function(v) genESP = v end }) ESPTab:CreateToggle({ Name = "Item ESP (BloxyCola, MedKit)", CurrentValue = false, Callback = function(v) itemESP = v end })

-- ESP Highlights local highlights = {} local function addHighlight(target, color, tag) if not highlights[tag] then local h = Instance.new("Highlight") h.FillColor, h.OutlineColor = color, Color3.new(1, 1, 1) h.FillTransparency, h.OutlineTransparency = 0.3, 0.5 h.Adornee, h.Parent = target, target highlights[tag] = h elseif highlights[tag].Adornee ~= target then highlights[tag].Adornee = target end end local function clearHighlights() for _, h in pairs(highlights) do pcall(function() h:Destroy() end) end highlights = {} end

-- ESP Loop local RunService = game:GetService("RunService") local Players = game:GetService("Players") local LocalPlayer = Players.LocalPlayer RunService.RenderStepped:Connect(function() clearHighlights() if killerESP then for _, plr in pairs(Players:GetPlayers()) do if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then for , t in pairs(plr.Character:GetDescendants()) do if t:IsA("Tool") and t.Name:lower():find("slash") then addHighlight(plr.Character, Color3.new(1, 0, 0), "killer"..plr.Name) break end end end end end if survivorESP then for , plr in pairs(Players:GetPlayers()) do if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then addHighlight(plr.Character, Color3.new(0, 1, 0), "survivor"..plr.Name) end end end if genESP then for , obj in pairs(workspace:GetDescendants()) do if obj:IsA("BasePart") and (obj.Name:lower():find("generator") or obj.Name:lower():find("gen")) then local target = obj:IsA("Model") and obj or obj.Parent if target then addHighlight(target, Color3.new(1, 1, 0), "gen"..obj:GetDebugId()) end end end end if itemESP then for , item in pairs(workspace:GetDescendants()) do if item:IsA("BasePart") and (item.Name:lower():find("cola") or item.Name:lower():find("medkit")) then addHighlight(item, Color3.new(0.5, 0.5, 1), "item"..item:GetDebugId()) end end end end)

-- Auto Punch local autoPunchEnabled = false local punchRange = 10 MainTab:CreateToggle({ Name = "Auto Punch (Killers & Guests)", CurrentValue = false, Callback = function(v) autoPunchEnabled = v end }) MainTab:CreateSlider({ Name = "Punch Range", Range = {0, 25}, Increment = 1, CurrentValue = punchRange, Callback = function(v) punchRange = v end })

-- Auto Punch Logic local function autoPunch() task.spawn(function() while task.wait(0.1) do local p = game.Players.LocalPlayer if not p.Character or not p.Character:FindFirstChild("HumanoidRootPart") then continue end if autoPunchEnabled then local tool = p.Character:FindFirstChildOfClass("Tool") if tool and tool:FindFirstChild("RemoteEvent") then for _, plr in pairs(Players:GetPlayers()) do if plr ~= p and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then local t = plr.Character:FindFirstChildOfClass("Tool") if t and t.Name:lower():find("slash") then local dist = (plr.Character.HumanoidRootPart.Position - p.Character.HumanoidRootPart.Position).Magnitude if dist <= punchRange then tool.RemoteEvent:FireServer() end end end end for _, npc in pairs(workspace:GetDescendants()) do if npc:IsA("Model") and npc:FindFirstChild("HumanoidRootPart") and npc.Name:lower():find("guest") then local dist = (npc.HumanoidRootPart.Position - p.Character.HumanoidRootPart.Position).Magnitude if dist <= punchRange then tool.RemoteEvent:FireServer() end end end end end end end) end autoPunch()

-- Add any missing sniffer logic here if needed

  
